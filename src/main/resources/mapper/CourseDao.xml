<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.chen.teachingsystem.mapper.CourseDao">
    <resultMap id="BaseResultMap" type="cn.chen.teachingsystem.entity.Course">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="capacity" jdbcType="INTEGER" property="capacity"/>
        <result column="member" jdbcType="INTEGER" property="member"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="place" jdbcType="VARCHAR" property="place"/>
        <result column="college" jdbcType="VARCHAR" property="college"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_edit_time" jdbcType="TIMESTAMP" property="lastEditTime"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="time" jdbcType="VARCHAR" property="time"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, teacher_id, capacity, `member`,course_name, place, college, content, start_time, end_time,
    create_time, last_edit_time, `type`, `time`
    </sql>
    <sql id="General_Column_List">
        id, teacher_id, capacity, course_name,`member` place, college, content, start_time, end_time,`type`, `time`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from course
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!-- 获取所有的课程列表   -->
    <select id="selectAll" resultType="cn.chen.teachingsystem.entity.Course">
        select
        <include refid="General_Column_List"/>
        from course;
    </select>
    <select id="selectByCondition" resultType="cn.chen.teachingsystem.entity.Course">
        select
        <include refid="Base_Column_List"/>
        from course
        <where>
            <if test="courseId != null">and id = #{courseId}</if>
            <if test="courseName != null">
                and course_name like '%${courseName}%'
            </if>
            <if test="college != null">and college = #{college}</if>
        </where>
    </select>
    <select id="getSelectedCourse" resultType="cn.chen.teachingsystem.entity.Course">
        select
        <include refid="General_Column_List"/>
        from course
        <where>
            <if test="userId != null">
                and id in (
                select course_id from elective where user_id = #{userId,jdbcType=INTEGER}
                <if test="finish != null">and finish = #{finish,jdbcType=INTEGER}</if>
                )
            </if>
            <if test="courseName != null">
                and course_name like '%${courseName}%'
            </if>
            <if test="college != null">and college = #{college,jdbcType=VARCHAR}</if>
            <if test="courseId != null">and id = #{courseId,jdbcType=INTEGER}</if>
            <if test="time != null">
                and time like '%${time}%'
            </if>
        </where>
    </select>
    <select id="findCourseListByTeacherId" resultType="cn.chen.teachingsystem.entity.Course">
        select
        <include refid="General_Column_List"/>
        from course
        where teacher_id = #{teacherId,jdbcType=INTEGER}
        and id in (select distinct(course_id) from elective where finish = 2);
    </select>
    <select id="selectCourseBeEvaluated" resultType="cn.chen.teachingsystem.entity.Course">
        select
        <include refid="Base_Column_List"/>
        from course
        where id in (select distinct (course_id) from questionnaire);
    </select>
    <select id="getNumberOfCourse" resultType="java.lang.Integer">
        select count(*)
        from course
        where teacher_id = #{teacherId};
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from course
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.chen.teachingsystem.entity.Course"
            useGeneratedKeys="true">
        insert into course (teacher_id, capacity, course_name,
                            place, college, content,
                            start_time, end_time, create_time,
                            last_edit_time, `type`, `time`)
        values (#{teacher_id,jdbcType=INTEGER}, #{capacity,jdbcType=INTEGER}, #{course_name,jdbcType=VARCHAR},
                #{place,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{start_time,jdbcType=TIMESTAMP}, #{end_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP},
                #{last_edit_time,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.chen.teachingsystem.entity.Course"
            useGeneratedKeys="true">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacher_id != null">
                teacher_id,
            </if>
            <if test="capacity != null">
                capacity,
            </if>
            <if test="course_name != null">
                course_name,
            </if>
            <if test="place != null">
                place,
            </if>
            <if test="college != null">
                college,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="start_time != null">
                start_time,
            </if>
            <if test="end_time != null">
                end_time,
            </if>
            <if test="create_time != null">
                create_time,
            </if>
            <if test="last_edit_time != null">
                last_edit_time,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="time != null">
                `time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacher_id != null">
                #{teacher_id,jdbcType=INTEGER},
            </if>
            <if test="capacity != null">
                #{capacity,jdbcType=INTEGER},
            </if>
            <if test="course_name != null">
                #{course_name,jdbcType=VARCHAR},
            </if>
            <if test="place != null">
                #{place,jdbcType=VARCHAR},
            </if>
            <if test="college != null">
                #{college,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="start_time != null">
                #{start_time,jdbcType=TIMESTAMP},
            </if>
            <if test="end_time != null">
                #{end_time,jdbcType=TIMESTAMP},
            </if>
            <if test="create_time != null">
                #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="last_edit_time != null">
                #{last_edit_time,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.chen.teachingsystem.entity.Course">
        update course
        <set>
            <if test="teacher_id != null">
                teacher_id = #{teacher_id,jdbcType=INTEGER},
            </if>
            <if test="capacity != null">
                capacity = #{capacity,jdbcType=INTEGER},
            </if>
            <if test="course_name != null">
                course_name = #{course_name,jdbcType=VARCHAR},
            </if>
            <if test="place != null">
                place = #{place,jdbcType=VARCHAR},
            </if>
            <if test="college != null">
                college = #{college,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="start_time != null">
                start_time = #{start_time,jdbcType=TIMESTAMP},
            </if>
            <if test="end_time != null">
                end_time = #{end_time,jdbcType=TIMESTAMP},
            </if>
            <if test="create_time != null">
                create_time = #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="last_edit_time != null">
                last_edit_time = #{last_edit_time,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                `time` = #{time,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.chen.teachingsystem.entity.Course">
        update course
        set teacher_id     = #{teacher_id,jdbcType=INTEGER},
            capacity       = #{capacity,jdbcType=INTEGER},
            course_name    = #{course_name,jdbcType=VARCHAR},
            place          = #{place,jdbcType=VARCHAR},
            college        = #{college,jdbcType=VARCHAR},
            content        = #{content,jdbcType=VARCHAR},
            start_time     = #{start_time,jdbcType=TIMESTAMP},
            end_time       = #{end_time,jdbcType=TIMESTAMP},
            create_time    = #{create_time,jdbcType=TIMESTAMP},
            last_edit_time = #{last_edit_time,jdbcType=TIMESTAMP},
            `type`         = #{type,jdbcType=VARCHAR},
            `time`         = #{time,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="increaseMember">
        update `course`
        set `member` = `member` + 1
        where id = #{id,jdbcType=INTEGER};
    </update>
    <update id="reduceMember">
        update `course`
        set `member` = IF(`member` &lt; 1, 0, `member` - 1)
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>